insmod regexp

probe -u $root --set=rootuuid
set rootpath="/dev/disk/by-uuid/$rootuuid"
set isopath="/boot/iso"
set imgdevpath="/dev/disk/by-uuid/$rootuuid"
export isopath rootuuid imgdevpath

submenu "Tiny Core" {
	set isopath="$isopath/TinyCore"
	export isopath
	menuentry "Core (cli only)" {
		set isofile="$isopath/Core-current.iso"
		echo "Loopback attempt:" "$root/$isofile"

		loopback loop "($root)/$isofile"
		bootoptions="iso=UUID=$rootuuid/$isofile loglevel=3 cde"
		linux (loop)/boot/vmlinuz $bootoptions
		initrd (loop)/boot/core.gz
	}

	menuentry "TinyCore (gui)" {
		set isofile="$isopath/TinyCore-current.iso"
		echo "Loopback attempt:" "$root/$isofile"

		loopback loop "($root)/$isofile"
		bootoptions="iso=UUID=$rootuuid/$isofile loglevel=3 cde"
		linux (loop)/boot/vmlinuz $bootoptions
		initrd (loop)/boot/core.gz
	}

	menuentry "CorePlus (gui + wifi + extra)" {
		set isofile="$isopath/CorePlus-current.iso"
		echo "Loopback attempt:" "$root/$isofile"

		loopback loop "($root)/$isofile"
		bootoptions="iso=UUID=$rootuuid/$isofile loglevel=3 cde"
		linux (loop)/boot/vmlinuz $bootoptions
		initrd (loop)/boot/core.gz
	}
}

menuentry "x64 Arch-Iso" {
	set isofile="$isopath/archlinux-mar-2021.iso"
	echo "Loopback attempt:" "$root/$isofile"

	loopback loop "($root)/$isofile"
	bootoptions="img_dev=$imgdevpath img_loop=$isofile earlymodules=loop"
        linux (loop)/arch/boot/x86_64/vmlinuz* $bootoptions
        initrd (loop)/arch/boot/x86_64/*.img
}

# Does wildcard expansion to tolerate datestamps
for isofile in $isopath/antiX*full.iso; do
	if [ -e "$isofile" ]; then
		menuentry "AntiX-Full" {
			#set isofile="${isopath}/antiX*full.iso"	
			echo "Loopback attempt:" "$root/$isofile"

			loopback loop "($root)/$isofile"
			bootoptions="from=hd,usb root=UUID=$rootuuid fromiso=$isofile quiet splash=v disable=lx"
			linux (loop)/antiX/vmlinuz $bootoptions
			initrd (loop)/antiX/initrd.gz
		}
	fi
done
